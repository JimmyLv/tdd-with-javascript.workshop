{"version":3,"sources":["logo.svg","model/product.js","components/AddProduct.js","components/Header.js","components/Counter.js","components/Product.js","components/Cart.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","generateProduct","id","count","price","changeProduct","products","productToChange","map","product","AddProduct","state","shouldShowPopup","value","togglePopup","_this","setState","prevState","handleChange","e","target","handleConfirm","props","onConfirm","preventDefault","react_default","a","createElement","className","onClick","this","style","display","onSubmit","type","placeholder","onChange","Component","defaultProps","Header","src","logo","alt","Counter","_ref","minusCount","plusCount","Product","_this$props","onCountChange","Object","objectSpread","_this$props2","_this$props$product","href","concat","components_Counter","Cart","handleAddProduct","productToExist","find","productToAdd","toConsumableArray","addProduct","handleProductChange","fetch","res","json","_this2","src_components_Header","arguments","length","undefined","reduce","prev","item","totalPrice","src_components_Product","key","src_components_AddProduct","App","name","src_components_Cart","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c74e6b64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function totalPrice(products = []) {\n  return products.reduce((prev, item) => prev + item.price * item.count, 0)\n}\n\nexport const generateProduct = id => ({\n  id,\n  count: 1,\n  price: 100,\n})\n\nexport function addProduct(products, productToAdd) {\n  return [...products, productToAdd]\n}\n\nexport function changeProduct(products, productToChange) {\n  return products.map(\n    product => (product.id === productToChange.id ? productToChange : product),\n  )\n}\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport './AddProduct.css'\n\nclass AddProduct extends Component {\n  state = {\n    shouldShowPopup: false,\n    value: '',\n  }\n\n  togglePopup = () => {\n    this.setState(prevState => ({\n      shouldShowPopup: !prevState.shouldShowPopup,\n    }))\n  }\n\n  handleChange = e => {\n    this.setState({ value: e.target.value })\n  }\n\n  handleConfirm = e => {\n    if (this.state.value) {\n      this.props.onConfirm(+this.state.value)\n      this.setState({\n        shouldShowPopup: false,\n        value: '',\n      })\n    }\n    e.preventDefault()\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"bottom-action\">\n          <button className=\"btn add\" onClick={this.togglePopup}>\n            添加商品\n          </button>\n          <div\n            className=\"popup\"\n            style={{ display: this.state.shouldShowPopup ? 'block' : 'none' }}\n          >\n            <div className=\"backdrop\" onClick={this.togglePopup} />\n            <form onSubmit={this.handleConfirm} className=\"popup-content\">\n              <h3>添加商品</h3>\n              <input\n                type=\"text\"\n                placeholder=\"请输入商品编号\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <button className=\"btn confirm\" type=\"submit\" value=\"Submit\">\n                确定\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nAddProduct.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n}\nAddProduct.defaultProps = {}\n\nexport default AddProduct\n","import React from 'react'\nimport logo from '../logo.svg'\nimport './Header.css'\n\nconst Header = () => (\n  <div className=\"header\">\n    <img className=\"header-logo\" src={logo} alt=\"logo\" />\n    <h3 className=\"header-title\">React Shopping Cart</h3>\n  </div>\n)\n\nexport default Header\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport './Counter.css'\n\nfunction Counter({ count, minusCount, plusCount }) {\n  return (\n    <div className=\"actions\">\n      <button className=\"minus\" onClick={minusCount}>\n        -\n      </button>\n      <span>数量 {count} </span>\n      <button className=\"plus\" onClick={plusCount}>\n        +\n      </button>\n    </div>\n  )\n}\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  minusCount: PropTypes.func.isRequired,\n  plusCount: PropTypes.func.isRequired,\n}\n\nexport default Counter\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport Counter from './Counter'\nimport './Product.css'\n\nclass Product extends Component {\n  render() {\n    const { id, count, price } = this.props.product\n    return (\n      <div className=\"product\">\n        <h3 className=\"code\">\n          <a href={`/products/${id}`}>商品编号：{id}</a>\n        </h3>\n        <div className=\"code\">单价：{price}</div>\n        <Counter\n          count={count}\n          minusCount={this.minusCount}\n          plusCount={this.plusCount}\n        />\n      </div>\n    )\n  }\n\n  minusCount = () => {\n    const { product, onCountChange } = this.props\n    if (product.count > 1) {\n      onCountChange({\n        ...product,\n        count: product.count - 1,\n      })\n    }\n  }\n\n  plusCount = () => {\n    const { product, onCountChange } = this.props\n    onCountChange({\n      ...product,\n      count: product.count + 1,\n    })\n  }\n}\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  onCountChange: PropTypes.func.isRequired,\n}\nProduct.defaultProps = {}\n\nexport default Product\n","import React, { Component } from 'react'\nimport {\n  addProduct,\n  changeProduct,\n  generateProduct,\n  totalPrice,\n} from '../model/product'\nimport AddProduct from './AddProduct'\nimport './Cart.css'\nimport Header from './Header'\nimport Product from './Product'\n\nclass Cart extends Component {\n  state = {\n    products: [],\n  }\n\n  async componentDidMount() {\n    const res = await fetch('http://localhost:3001/products')\n    const products = await res.json()\n    this.setState({ products })\n  }\n\n  handleAddProduct = id => {\n    this.setState(prevState => {\n      const productToExist = prevState.products.find(p => p.id === id)\n      const products = productToExist\n        ? changeProduct(prevState.products, {\n            ...productToExist,\n            count: productToExist.count + 1,\n          })\n        : addProduct(prevState.products, generateProduct(id))\n\n      return { products }\n    })\n  }\n\n  handleProductChange = product => {\n    this.setState(prevState => ({\n      products: changeProduct(prevState.products, product),\n    }))\n  }\n\n  render() {\n    const { products } = this.state\n    return (\n      <div className=\"page-cart\">\n        <Header />\n        <div className=\"price\">总价{totalPrice(products)}</div>\n        <div className=\"list\">\n          {products.map(product => (\n            <Product\n              key={product.id}\n              product={product}\n              onCountChange={this.handleProductChange}\n            />\n          ))}\n        </div>\n        <div>hello world!</div>\n        <AddProduct onConfirm={this.handleAddProduct} />\n      </div>\n    )\n  }\n}\n\nCart.propTypes = {}\nCart.defaultProps = {}\n\nexport default Cart\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport './App.css'\nimport Cart from './components/Cart'\nimport logo from './logo.svg'\n\nclass App extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n  }\n\n  static defaultProps = {\n    name: 'Test Driven Development',\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">{this.props.name}</h1>\n        </header>\n        <Cart />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}